// import React, { Component } from "react";
// import ItemManagerContract from "./contracts/ItemManager.json";
// import ItemContract from "./contracts/Item.json";
// import ItemList from "./components/ItemList";

// import getWeb3 from "./getWeb3";

// import "./App.css";

// class App extends Component {

//   constructor(props) {
//     super(props);
//     this.state = {
//       loaded: false,
//       cst: 10,
//       itemName: "example-1",
//       items: []
//     };
//     this.listenToPaymentEvent = this.listenToPaymentEvent.bind(this);
    
//   }

//   componentDidMount = async () => {
//     console.log("|---------------------------------")
//     console.log(this.state)
//     console.log("---------------------------------|")
//     try {
//       // Get network provider and web3 instance.
//       this.web3 = await getWeb3();


//       // Use web3 to get the user's accounts.
//       this.accounts = await this.web3.eth.getAccounts();
//       //console.log("#");
//       //console.log(this.accounts);

//       // Get the contract instance.
//       this.networkId = await this.web3.eth.net.getId();
//       //console.log("##");
//       //console.log(this.networkId);
//       //console.log(ItemManagerContract.networks[this.networkId].address);
//       //this.deployedNetwork = ItemManagerContract.networks[networkId];
//       this.itemManager = new this.web3.eth.Contract(
//         ItemManagerContract.abi,
//         ItemManagerContract.networks[this.networkId] && ItemManagerContract.networks[this.networkId].address,
//       );

//       this.item = new this.web3.eth.Contract(
//         ItemContract.abi,
//         ItemContract.networks[this.networkId] && ItemContract.networks[this.networkId].address,
//       );

//       //this.listenToPaymentEvent = this.listenToPaymentEvent.bind(this);


//       // Set web3, accounts, and contract to the state, and then proceed with an
//       // example of interacting with the contract's methods.
//       // this.setState({ 
//       //     loaded:true
//       //   });

//       this.setState((prev) => {
//         return {
//           ...prev,
//           loaded: true
//         }

//       }, () => {
//         console.log("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$");
//         this.listenToPaymentEvent();
//       });

//       //this.listenToPaymentEvent();

//     } catch (error) {
//       // Catch any errors for any of the above operations.
//       alert(
//         `Failed to load web3, accounts, or contract. Check console for details.`,
//       );
//       console.error(error);
//     }
//   };



//   handleInputChange = (event) => {
//     const target = event.target;
//     const value = target.type === "checkbox" ? target.checked : target.value;
//     const name = target.name;
//     this.setState({
//       [name]: value
//     })
//   }

//   handleSubmit = async (event) => {
//     event.preventDefault();
//     const { cst, itemName } = this.state;
//     console.log(cst);
//     console.log(itemName);
//     console.log(this.accounts[0]);

//     console.log("Accoimt[0]:-")



//     let result = await this.itemManager.methods.createItem(itemName, cst).send({ from: this.accounts[0] });

//     let itmAddress = result.events.SupplyChainStep.returnValues._itemAddress ? result.events.SupplyChainStep.returnValues._itemAddress : "none";

//     //console.log("Item Address..");
//     //console.log(result.events.SupplyChainStep.returnValues._itemAddress)

//     //console.log(result);
//     //console.log("Button Click - Completed");

//     let tItems = this.state.items;
//     tItems.push({
//       "identifier": itemName,
//       "cost": parseInt(cst),
//       "addr": itmAddress,
//       "state": "purchased"
//     });

//     this.setState(
//       (prev) => {
//         return {
//           ...prev,
//           items: tItems
//         };
//       });
//   }

//   handlePayment = async (idx, addr) => {
//     console.log("Handle Payment/../");
//     //console.log(e);

//     let itms = this.state.items;
//     console.log(itms);
//     // let result = itms.filter((item)=> {
//     //  console.log("=="  + item.cst + "," + e + "," + (item.cost != e));
//     //  return item.cost != e;
//     // });

//     this.setState((prev) => {
//       return {
//         ...prev,
//         items: itms
//         // items : result
//       }

//     })



//     let tempItem = this.state.items[idx];
//     let cost = tempItem.cost;

//     console.log("Send Money to Item..." + idx + "," + addr + "," + cost);

//     let itemPaymentResult = await this.web3.eth.sendTransaction({ to: addr, value: cost, from: this.accounts[0] });
//     console.log(itemPaymentResult);

//     //web3.eth.sendTransaction({to:"0xdCB7b5E4Db2dC46082336e92282c2818c4385075",value:101,from:accounts[0]})

//     console.log(JSON.stringify(this.state));
//     console.log("================");
//   }


  
  

//   listenToPaymentEvent = (event) => {
//     let self = this;
//     console.log("0.#Event=====");
//     this.itemManager.events.SupplyChainStep().on("data", async function (evt) {
      
//       console.log("1.#Event=====")
//       console.log(evt);
//       let itemObj = await self.itemManager.methods.items(evt.returnValues._itemIndex).call();

//       console.log("2.#Itemm=====")
//       console.log(itemObj);
//       console.log("3.#Sweet MEssage=====")
//       //console.log("4.#item.." + itemObj._identifier + "was paid and ready to be delivered");
//       console.log("4.#=>" + itemObj._identifier);
//       console.log("5.#=>" + itemObj._item);
//       console.log("6.#=>" + itemObj._itemPrice);
//       console.log("7.#=>" + itemObj._state);


//       console.log("8.#=>");
//       console.log(event);





//     });


//     //let res = this.state.items.map((x) => {
//     //  if (x.addr == iAddr) {
//     //    x.state = "paid";
//     //  }

//     //  return x;
//     //});

//     //console.log("10.#=>" + this.state);

//   };


//   render() {
//     if (!this.state.loaded) {
//       return <div>Loading Web3, accounts, and contract...</div>;
//     }
//     this.listenToPaymentEvent();
//     return (
//       <div className="App">
//         <form>
//           <h1>Event Trigger / Supply Chain Example</h1>
//           <h2>Items</h2>
//           <h3>Add Items</h3>
//           Cost in Wei : <input type="text" name="cst" value={this.state.cst} onChange={this.handleInputChange} />
//           Item Identifier : <input type="text" name="itemName" value={this.state.itemName} onChange={this.handleInputChange} />
//           <button type="submit" onClick={this.handleSubmit}>Create New Item</button>

//           <ItemList items={this.state.items} onClickPayment={this.handlePayment}></ItemList>
//         </form>
//       </div>
//     );
//   }
// }

// export default App;
