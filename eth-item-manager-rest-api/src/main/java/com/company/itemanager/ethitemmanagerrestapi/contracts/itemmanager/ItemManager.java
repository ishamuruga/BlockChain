package com.company.itemanager.ethitemmanagerrestapi.contracts.itemmanager;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class ItemManager extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ade806100606000396000f3fe6080604052600436106200005c5760003560e01c8063800fb83f14620000615780638c55174214620000815780638f32d59b14620000af578063b2bdfa7b14620000df578063bfb231d2146200010f578063cd31831e1462000156575b600080fd5b6200007f6004803603810190620000799190620009b5565b62000184565b005b3480156200008e57600080fd5b50620000ad6004803603810190620000a7919062000b49565b62000361565b005b348015620000bc57600080fd5b50620000c76200056f565b604051620000d6919062000bcc565b60405180910390f35b348015620000ec57600080fd5b50620000f7620005c6565b60405162000106919062000c2e565b60405180910390f35b3480156200011c57600080fd5b506200013b6004803603810190620001359190620009b5565b620005ea565b6040516200014d949392919062000dda565b60405180910390f35b3480156200016357600080fd5b506200018260048036038101906200017c9190620009b5565b620006d7565b005b600060028111156200019b576200019a62000d5a565b5b6001600083815260200190815260200160002060030160009054906101000a900460ff166002811115620001d457620001d362000d5a565b5b1462000217576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020e9062000e7e565b60405180910390fd5b3460016000838152602001908152602001600020600201541462000272576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002699062000ef0565b60405180910390fd5b600180600083815260200190815260200160002060030160006101000a81548160ff02191690836002811115620002ae57620002ad62000d5a565b5b02179055507f04dae4d23aa86ea4452ca552b9901b80bd40c63a842232a8a7975d07a3646f01816001600084815260200190815260200160002060030160009054906101000a900460ff1660028111156200030e576200030d62000d5a565b5b6001600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620003569392919062000f62565b60405180910390a150565b6200036b6200056f565b620003ad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003a49062001004565b60405180910390fd5b60003082600254604051620003c290620008a8565b620003d0939291906200105f565b604051809103906000f080158015620003ed573d6000803e3d6000fd5b5090508060016000600254815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006002548152602001908152602001600020600101908051906020019062000475929190620008b6565b508160016000600254815260200190815260200160002060020181905550600060016000600254815260200190815260200160002060030160006101000a81548160ff02191690836002811115620004d257620004d162000d5a565b5b02179055507f04dae4d23aa86ea4452ca552b9901b80bd40c63a842232a8a7975d07a3646f0160025460016000600254815260200190815260200160002060030160009054906101000a900460ff16600281111562000536576200053562000d5a565b5b836040516200054893929190620010ec565b60405180910390a16002600081548092919062000565906200116d565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546200063590620011ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200066390620011ea565b8015620006b45780601f106200068857610100808354040283529160200191620006b4565b820191906000526020600020905b8154815290600101906020018083116200069657829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b620006e16200056f565b62000723576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200071a9062001004565b60405180910390fd5b600160028111156200073a576200073962000d5a565b5b6001600083815260200190815260200160002060030160009054906101000a900460ff16600281111562000773576200077262000d5a565b5b14620007b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007ad9062001270565b60405180910390fd5b600260016000600254815260200190815260200160002060030160006101000a81548160ff02191690836002811115620007f557620007f462000d5a565b5b02179055507f04dae4d23aa86ea4452ca552b9901b80bd40c63a842232a8a7975d07a3646f01816001600084815260200190815260200160002060030160009054906101000a900460ff16600281111562000855576200085462000d5a565b5b6001600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200089d93929190620012e2565b60405180910390a150565b610774806200133583390190565b828054620008c490620011ea565b90600052602060002090601f016020900481019282620008e8576000855562000934565b82601f106200090357805160ff191683800117855562000934565b8280016001018555821562000934579182015b828111156200093357825182559160200191906001019062000916565b5b50905062000943919062000947565b5090565b5b808211156200096257600081600090555060010162000948565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6200098f816200097a565b81146200099b57600080fd5b50565b600081359050620009af8162000984565b92915050565b600060208284031215620009ce57620009cd62000970565b5b6000620009de848285016200099e565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000a3c82620009f1565b810181811067ffffffffffffffff8211171562000a5e5762000a5d62000a02565b5b80604052505050565b600062000a7362000966565b905062000a81828262000a31565b919050565b600067ffffffffffffffff82111562000aa45762000aa362000a02565b5b62000aaf82620009f1565b9050602081019050919050565b82818337600083830152505050565b600062000ae262000adc8462000a86565b62000a67565b90508281526020810184848401111562000b015762000b00620009ec565b5b62000b0e84828562000abc565b509392505050565b600082601f83011262000b2e5762000b2d620009e7565b5b813562000b4084826020860162000acb565b91505092915050565b6000806040838503121562000b635762000b6262000970565b5b600083013567ffffffffffffffff81111562000b845762000b8362000975565b5b62000b928582860162000b16565b925050602062000ba5858286016200099e565b9150509250929050565b60008115159050919050565b62000bc68162000baf565b82525050565b600060208201905062000be3600083018462000bbb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000c168262000be9565b9050919050565b62000c288162000c09565b82525050565b600060208201905062000c45600083018462000c1d565b92915050565b6000819050919050565b600062000c7662000c7062000c6a8462000be9565b62000c4b565b62000be9565b9050919050565b600062000c8a8262000c55565b9050919050565b600062000c9e8262000c7d565b9050919050565b62000cb08162000c91565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000cf257808201518184015260208101905062000cd5565b8381111562000d02576000848401525b50505050565b600062000d158262000cb6565b62000d21818562000cc1565b935062000d3381856020860162000cd2565b62000d3e81620009f1565b840191505092915050565b62000d54816200097a565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811062000d9d5762000d9c62000d5a565b5b50565b600081905062000db08262000d89565b919050565b600062000dc28262000da0565b9050919050565b62000dd48162000db5565b82525050565b600060808201905062000df1600083018762000ca5565b818103602083015262000e05818662000d08565b905062000e16604083018562000d49565b62000e25606083018462000dc9565b95945050505050565b7f4974656d20697320616c72656164792050616964000000000000000000000000600082015250565b600062000e6660148362000cc1565b915062000e738262000e2e565b602082019050919050565b6000602082019050818103600083015262000e998162000e57565b9050919050565b7f4f6e6c792046756c6c205061796d656e74206973206163637065746564000000600082015250565b600062000ed8601d8362000cc1565b915062000ee58262000ea0565b602082019050919050565b6000602082019050818103600083015262000f0b8162000ec9565b9050919050565b7f747269676765727061796d656e74000000000000000000000000000000000000600082015250565b600062000f4a600e8362000cc1565b915062000f578262000f12565b602082019050919050565b600060808201905062000f79600083018662000d49565b62000f88602083018562000d49565b62000f97604083018462000c1d565b818103606083015262000faa8162000f3b565b9050949350505050565b7f596f7520617265206e6f7420746865204f776e65722121000000000000000000600082015250565b600062000fec60178362000cc1565b915062000ff98262000fb4565b602082019050919050565b600060208201905081810360008301526200101f8162000fdd565b9050919050565b6000620010338262000c55565b9050919050565b6000620010478262001026565b9050919050565b62001059816200103a565b82525050565b60006060820190506200107660008301866200104e565b62001085602083018562000d49565b62001094604083018462000d49565b949350505050565b7f6372656174656974656d00000000000000000000000000000000000000000000600082015250565b6000620010d4600a8362000cc1565b9150620010e1826200109c565b602082019050919050565b600060808201905062001103600083018662000d49565b62001112602083018562000d49565b62001121604083018462000c1d565b81810360608301526200113481620010c5565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200117a826200097a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620011b057620011af6200113e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200120357607f821691505b602082108114156200121a5762001219620011bb565b5b50919050565b7f4974656d20697320616c72656164792044656c69766572656400000000000000600082015250565b60006200125860198362000cc1565b9150620012658262001220565b602082019050919050565b600060208201905081810360008301526200128b8162001249565b9050919050565b7f7472696767657264656c76696572790000000000000000000000000000000000600082015250565b6000620012ca600f8362000cc1565b9150620012d78262001292565b602082019050919050565b6000608082019050620012f9600083018662000d49565b62001308602083018562000d49565b62001317604083018462000c1d565b81810360608301526200132a81620012bb565b905094935050505056fe608060405234801561001057600080fd5b5060405161077438038061077483398181016040528101906100329190610134565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160008190555080600281905550505050610187565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b98261008e565b9050919050565b60006100cb826100ae565b9050919050565b6100db816100c0565b81146100e657600080fd5b50565b6000815190506100f8816100d2565b92915050565b6000819050919050565b610111816100fe565b811461011c57600080fd5b50565b60008151905061012e81610108565b92915050565b60008060006060848603121561014d5761014c610089565b5b600061015b868287016100e9565b935050602061016c8682870161011f565b925050604061017d8682870161011f565b9150509250925092565b6105de806101966000396000f3fe6080604052600436106100385760003560e01c80632986c0e5146102505780633c8da5881461027b57806389794d00146102a657610241565b3661024157600060015414610082576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007990610340565b60405180910390fd5b34600054146100c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bd906103ac565b60405180910390fd5b34600160008282546100d89190610405565b925050819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460025460405160240161012e919061046a565b6040516020818303038152906040527f800fb83f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101b891906104ff565b60006040518083038185875af1925050503d80600081146101f5576040519150601f19603f3d011682016040523d82523d6000602084013e6101fa565b606091505b505090508061023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610588565b60405180910390fd5b50005b34801561024d57600080fd5b50005b34801561025c57600080fd5b506102656102d1565b604051610272919061046a565b60405180910390f35b34801561028757600080fd5b506102906102d7565b60405161029d919061046a565b60405180910390f35b3480156102b257600080fd5b506102bb6102dd565b6040516102c8919061046a565b60405180910390f35b60025481565b60005481565b60015481565b600082825260208201905092915050565b7f4974656d20697320616c72656164792070616964000000000000000000000000600082015250565b600061032a6014836102e3565b9150610335826102f4565b602082019050919050565b600060208201905081810360008301526103598161031d565b9050919050565b7f4f6e6c792046756c6c205061796d656e74732061726520616c6c6f7765640000600082015250565b6000610396601e836102e3565b91506103a182610360565b602082019050919050565b600060208201905081810360008301526103c581610389565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610410826103cc565b915061041b836103cc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104505761044f6103d6565b5b828201905092915050565b610464816103cc565b82525050565b600060208201905061047f600083018461045b565b92915050565b600081519050919050565b600081905092915050565b60005b838110156104b957808201518184015260208101905061049e565b838111156104c8576000848401525b50505050565b60006104d982610485565b6104e38185610490565b93506104f381856020860161049b565b80840191505092915050565b600061050b82846104ce565b915081905092915050565b7f546865205472616e73616374696f6e207761736e27742073756365737366756c60008201527f6c2c2068656e63652063616e63656c6c696e672e2e2e00000000000000000000602082015250565b60006105726036836102e3565b915061057d82610516565b604082019050919050565b600060208201905081810360008301526105a181610565565b905091905056fea26469706673582212205aab4175c80998cb483754fdf1c74ffc8b850ffc9e9154b52ae1b84f9100719164736f6c634300080a0033a2646970667358221220c784c6e4ecd117474a5c6b9c580cb484534acfe28af1c5a63302a9f651a658aa64736f6c634300080a0033";

    public static final String FUNC__OWNER = "_owner";

    public static final String FUNC_ISOWNER = "isOwner";

    public static final String FUNC_ITEMS = "items";

    public static final String FUNC_CREATEITEM = "createItem";

    public static final String FUNC_TRIGGERPAYMENT = "triggerPayment";

    public static final String FUNC_TRIGGERDELIVERY = "triggerDelivery";

    public static final Event SUPPLYCHAINSTEP_EVENT = new Event("SupplyChainStep", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("5777", "0xA6abC142ab0A977684687a29377AA485f2a71102");
    }

    @Deprecated
    protected ItemManager(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ItemManager(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ItemManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ItemManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<SupplyChainStepEventResponse> getSupplyChainStepEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SUPPLYCHAINSTEP_EVENT, transactionReceipt);
        ArrayList<SupplyChainStepEventResponse> responses = new ArrayList<SupplyChainStepEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SupplyChainStepEventResponse typedResponse = new SupplyChainStepEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._itemIndex = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._step = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._itemAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.srcdest = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SupplyChainStepEventResponse> supplyChainStepEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SupplyChainStepEventResponse>() {
            @Override
            public SupplyChainStepEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SUPPLYCHAINSTEP_EVENT, log);
                SupplyChainStepEventResponse typedResponse = new SupplyChainStepEventResponse();
                typedResponse.log = log;
                typedResponse._itemIndex = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._step = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._itemAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.srcdest = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SupplyChainStepEventResponse> supplyChainStepEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SUPPLYCHAINSTEP_EVENT));
        return supplyChainStepEventFlowable(filter);
    }

    public RemoteFunctionCall<String> _owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isOwner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Tuple4<String, String, BigInteger, BigInteger>> items(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ITEMS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}));
        return new RemoteFunctionCall<Tuple4<String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple4<String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> createItem(String _identifier, BigInteger _itemPrice) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEITEM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_identifier), 
                new org.web3j.abi.datatypes.generated.Uint256(_itemPrice)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> triggerPayment(BigInteger _itemIndex, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRIGGERPAYMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_itemIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> triggerDelivery(BigInteger _itemIndex) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRIGGERDELIVERY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_itemIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static ItemManager load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ItemManager(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ItemManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ItemManager(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ItemManager load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ItemManager(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ItemManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ItemManager(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ItemManager> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ItemManager.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ItemManager> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ItemManager.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<ItemManager> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ItemManager.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ItemManager> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ItemManager.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class SupplyChainStepEventResponse extends BaseEventResponse {
        public BigInteger _itemIndex;

        public BigInteger _step;

        public String _itemAddress;

        public String srcdest;
    }
}
